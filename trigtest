@isTest
public class B2BProductCollectionHandlerTest {
    @testSetup
    static void setupData() {
        webstore webstore = B2B_TestDataFactory.createWebStore();
        // Accounts
        Account testAccount = B2B_TestDataFactory.createAccount(true);
        Account testAccount2 = B2B_TestDataFactory.createAccount(false);
        testAccount2.Name = 'testAccount2';
        insert testAccount2;
        
        // Create Test Contact and User
        Contact testContact = B2B_TestDataFactory.createContact(testAccount);  
        
        User testUser = B2B_TestDataFactory.createCommunityUser(testContact, 'testUser@test.com');
        
        
        // Create Product
        Product2 testProductA = B2B_TestDataFactory.createProduct2();
        testProductA.B2B_PACK_QUANTITY__c = 1;
        testProductA.B2B_UNITS__c = 'EA';
        update testProductA;
        
        B2B_TestDataFactory.createProduct2('SKU123','SKU123',true);
        
        System.runAs(testUser){
            // Create a new ProductCollection record
            ProductCollection__c productCollection = B2B_TestDataFactory.createProductCollection(webstore.Id,testAccount.Id);
            
            //create line items
            ProductCollectionLineItem__c collectionItem = B2B_TestDataFactory.createProductCollectionLineItem(testProductA.Id,productCollection.Id);
            
            // Create a new public ProductCollection record
            ProductCollection__c publicpc = B2B_TestDataFactory.createPublicProductCollection(webstore.Id,testAccount.Id);
            
        }
    }
    
    @IsTest
    static void testUpdateCollectionItemPrices_Insert() {
        Test.startTest();
        ProductCollection__c pc = [SELECT id from ProductCollection__c LIMIT 1];
        // call helper directly
        B2BProductCollectionHandler.updateCollectionItemPrices(
            new List<ProductCollection__c>{ pc },
            null
        );
        Test.stopTest();
    }
}
